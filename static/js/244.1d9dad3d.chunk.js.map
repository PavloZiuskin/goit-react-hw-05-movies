{"version":3,"file":"static/js/244.1d9dad3d.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/servicesApi.js","views/Home/Home.jsx","views/Home/Home.styled.js","views/MovieDetails/MovieDetails.styled.js","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink as Nav } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\nexport const StyleItemLink = styled(Nav)`\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n  border-radius: 10px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% / 2) - 16px);\n  }\n  @media screen and (min-width: 1080px) {\n    width: calc((100% / 3) - 18px);\n  }\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    box-shadow 250ms ease-in-out, transform 250ms ease-in-out;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 10px 20px 10px,\n      rgba(0, 0, 0, 0.3) 0px 10px 7px -2px;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n`;\n\nexport const ImgSize = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 10px;\n  overflow: hidden;\n`;\n\nexport const MovieTitle = styled.h3`\n  font-size: 24px;\n  color: #000;\n`;\nexport const InfoForMovie = styled.p`\n  color: #000;\n  font-size: 18px;\n  font-weight: 700;\n`;\n","import {  useLocation } from \"react-router-dom\";\nimport { MovieList, Item, ImgWrapper, InfoWrapper, StyleItemLink, MovieTitle, ImgSize, InfoForMovie } from \"./MoviesList.styled\";\nimport { BASE_IMG_URL } from \"views/MovieDetails/MovieDetails\";\nimport defaultImg from '../../images/movie-pic.jpeg'\n\nexport default function MoviesList({ movies }) {\n    \n    const location = useLocation();\n    return (\n        <MovieList>\n            {movies.map(({id,title,vote_average, release_date,poster_path}) => (<Item key={id}>\n                <StyleItemLink to={`/movies/${id}`} state={{ from: location }}>\n                    <ImgWrapper>\n                        <ImgSize src={poster_path ? BASE_IMG_URL+poster_path : defaultImg} alt={title} />\n                    </ImgWrapper>\n                    <InfoWrapper>\n                        <MovieTitle>{title}</MovieTitle>\n                        <InfoForMovie>Rating: {vote_average}</InfoForMovie>\n                        <InfoForMovie>{release_date }</InfoForMovie>\n                    </InfoWrapper>\n                    </StyleItemLink>\n            </Item>))}\n        </MovieList>\n    )\n}","import axios from 'axios';\n\nconst KEY_API = 'e32bfdef8b19fee5cb99e2b4c56ab1dd';\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: KEY_API },\n});\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n      },\n    });\n    return movies.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day');\n    return movies.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesDetaisById(id) {\n  try {\n    const movies = await agent.get(`movie/${id}`);\n    return movies.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getCast(id) {\n  try {\n    const actors = await agent.get(`movie/${id}/credits`);\n    return actors.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getReviews(id) {\n  try {\n    const actors = await agent.get(`movie/${id}/reviews`);\n    return actors.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { getTrendingMovies } from \"services/servicesApi\";\nimport { useEffect,useState } from \"react\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { ContainerHeader } from \"components/SharedLouaot/Nav.styled\";\nimport { TitlePage } from \"./Home.styled\";\n function Home() {\n    const[movies,setMovies]=useState([])\n\n    useEffect(() => {\n        getTrendingMovies().then(setMovies)\n    },[])\n    return (\n        <ContainerHeader>\n            <TitlePage>Home</TitlePage>\n            <MoviesList movies={movies } />\n        </ContainerHeader>\n        \n\n    )\n};\nexport default Home;","import styled from 'styled-components';\n\nexport const TitlePage = styled.h1`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { NavLink as Nav } from 'react-router-dom';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: block;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 20px;\n  }\n`;\nexport const ImgContainer = styled.div`\n  width: 100%;\n  border-radius: 10px;\n  @media screen and (min-width: 768px) {\n    width: 50%;\n  }\n  img {\n    border-radius: 10px;\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const CastReviewsContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  padding-left: 20px;\n  gap: 20px;\n`;\n\nexport const NavStyled = styled(Nav)`\n  font-size: 24px;\n  text-decoration: none;\n  color: #000;\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\nexport const ButtonBackTo = styled.button`\n  width: 150px;\n  height: 40px;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 600;\n  background-color: transparent;\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n","import { useParams, useLocation,useNavigate, Outlet } from \"react-router-dom\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { getMoviesDetaisById } from \"services/servicesApi\";\nimport { Container } from \"components/App.styled\";\nimport { TitlePage } from \"views/Home/Home.styled\";\nimport { MovieDetailsWrapper, ImgContainer, CastReviewsContainer, NavStyled,ButtonBackTo } from \"./MovieDetails.styled\";\nimport defaultImg from '../../images/movie-pic.jpeg'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nfunction MovieDetails() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [movie, setMovie] = useState(null);\n    const { id } = useParams();\n    \n    useEffect(() => {\n        getMoviesDetaisById(id).then(setMovie);\n    }, [id,])\n    \n    const handleGoBack = () => {\n        navigate(location?.state?.from ?? '/')\n    }\n\n\n    if (!movie) {\n        return (<p>Loading ...</p>)\n    }\n    return (\n        <Container>\n            <ButtonBackTo onClick={handleGoBack} type='button'>Go back</ButtonBackTo>\n            <TitlePage>MovieDetails</TitlePage>\n            <MovieDetailsWrapper>\n                <ImgContainer>\n                    <img src={movie.poster_path ? BASE_IMG_URL+movie.poster_path : defaultImg} alt={movie.title} />\n                </ImgContainer>\n                <div>\n                    <h2>\n                        {movie.title ?? movie.original_title} ({Number.parseInt(movie.release_date)})\n                    </h2>\n                    <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                    <h4>Genres</h4>\n                    <p>{movie.genres.map(genre=>genre.name).join(', ')}</p>\n                </div>\n            </MovieDetailsWrapper>\n            <div>\n                 <CastReviewsContainer>\n\n                <NavStyled to='cast' state={{from: location?.state?.from ?? '/'}}>Cast</NavStyled>\n                <NavStyled to='reviews' state={{ from: location?.state?.from ?? '/' }}>Reviews</NavStyled>\n                </CastReviewsContainer>\n                <div>\n                    <Suspense fallback={<p>Loading ...</p>}>\n                        <Outlet/>\n                    </Suspense>\n                </div>\n            </div>  \n        </Container>\n    )\n};\nexport default MovieDetails;"],"names":["MovieList","styled","StyleItemLink","Nav","Item","ImgWrapper","ImgSize","InfoWrapper","MovieTitle","InfoForMovie","MoviesList","movies","location","useLocation","map","id","title","vote_average","release_date","poster_path","to","state","from","src","BASE_IMG_URL","defaultImg","alt","agent","axios","baseURL","params","api_key","getMoviesByQuery","query","get","data","results","console","log","message","getTrendingMovies","getMoviesDetaisById","getCast","actors","cast","getReviews","useState","setMovies","useEffect","then","TitlePage","MovieDetailsWrapper","ImgContainer","CastReviewsContainer","NavStyled","ButtonBackTo","navigate","useNavigate","movie","setMovie","useParams","onClick","type","original_title","Number","parseInt","Math","round","overview","genres","genre","name","join","Suspense","fallback"],"sourceRoot":""}