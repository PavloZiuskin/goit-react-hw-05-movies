{"version":3,"file":"static/js/387.784e0e3c.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/servicesApi.js","views/Home/Home.styled.js","views/MovieDetails/MovieDetails.styled.js","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const Castlist = styled.ul`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  width: calc((100% / 3) - 12px);\n  @media screen and (min-width: 768px) {\n    width: calc((100% / 10) - 12px);\n  }\n`;\n\nexport const CintainetCastImg = styled.div`\n  width: 100%;\n  img {\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"services/servicesApi\";\nimport { BASE_IMG_URL } from \"views/MovieDetails/MovieDetails\";\nimport { Castlist,CastItem,CintainetCastImg } from \"./Cast.styled\";\nimport defaultImg from '../../images/notfoundphoto.jpeg'\nexport default function Cast() {\n    const [cast, setCast] = useState([]);\n    const { id } = useParams();\n    useEffect(() => {\n        getCast(id).then(setCast)\n    }, [id]);\n    return (\n        <>\n            <h2>Cast</h2>\n            <Castlist>\n                {cast.map(({cast_id,name,profile_path,}) => \n                    <CastItem key={cast_id}>\n                        <CintainetCastImg><img src={profile_path ? BASE_IMG_URL+profile_path  : defaultImg } alt={name} /></CintainetCastImg>\n                        <p>{name}</p>\n                        \n                    </CastItem>\n                )}\n            </Castlist>\n        </>\n        )\n}","import axios from 'axios';\n\nconst KEY_API = 'e32bfdef8b19fee5cb99e2b4c56ab1dd';\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: KEY_API },\n});\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n      },\n    });\n    return movies.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day');\n    return movies.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesDetaisById(id) {\n  try {\n    const movies = await agent.get(`movie/${id}`);\n    return movies.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getCast(id) {\n  try {\n    const actors = await agent.get(`movie/${id}/credits`);\n    return actors.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getReviews(id) {\n  try {\n    const actors = await agent.get(`movie/${id}/reviews`);\n    return actors.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import styled from 'styled-components';\n\nexport const TitlePage = styled.h1`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { NavLink as Nav } from 'react-router-dom';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: block;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 20px;\n  }\n`;\nexport const ImgContainer = styled.div`\n  width: 100%;\n  border-radius: 10px;\n  @media screen and (min-width: 768px) {\n    width: 50%;\n  }\n  img {\n    border-radius: 10px;\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const CastReviewsContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  padding-left: 20px;\n  gap: 20px;\n`;\n\nexport const NavStyled = styled(Nav)`\n  font-size: 24px;\n  text-decoration: none;\n  color: #000;\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\nexport const ButtonBackTo = styled.button`\n  width: 150px;\n  height: 40px;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 600;\n  background-color: transparent;\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n","import { useParams, useLocation,useNavigate, Outlet } from \"react-router-dom\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { getMoviesDetaisById } from \"services/servicesApi\";\nimport { Container } from \"components/App.styled\";\nimport { TitlePage } from \"views/Home/Home.styled\";\nimport { MovieDetailsWrapper, ImgContainer, CastReviewsContainer, NavStyled,ButtonBackTo } from \"./MovieDetails.styled\";\nimport defaultImg from '../../images/movie-pic.jpeg'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nfunction MovieDetails() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [movie, setMovie] = useState(null);\n    const { id } = useParams();\n    \n    useEffect(() => {\n        getMoviesDetaisById(id).then(setMovie);\n    }, [id,])\n    \n    const handleGoBack = () => {\n        navigate(location?.state?.from ?? '/')\n    }\n\n\n    if (!movie) {\n        return (<p>Loading ...</p>)\n    }\n    return (\n        <Container>\n            <ButtonBackTo onClick={handleGoBack} type='button'>Go back</ButtonBackTo>\n            <TitlePage>MovieDetails</TitlePage>\n            <MovieDetailsWrapper>\n                <ImgContainer>\n                    <img src={movie.poster_path ? BASE_IMG_URL+movie.poster_path : defaultImg} alt={movie.title} />\n                </ImgContainer>\n                <div>\n                    <h2>\n                        {movie.title ?? movie.original_title} ({Number.parseInt(movie.release_date)})\n                    </h2>\n                    <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                    <h4>Genres</h4>\n                    <p>{movie.genres.map(genre=>genre.name).join(', ')}</p>\n                </div>\n            </MovieDetailsWrapper>\n            <div>\n                 <CastReviewsContainer>\n\n                <NavStyled to='cast' state={{from: location?.state?.from ?? '/'}}>Cast</NavStyled>\n                <NavStyled to='reviews' state={{ from: location?.state?.from ?? '/' }}>Reviews</NavStyled>\n                </CastReviewsContainer>\n                <div>\n                    <Suspense fallback={<p>Loading ...</p>}>\n                        <Outlet/>\n                    </Suspense>\n                </div>\n            </div>  \n        </Container>\n    )\n};\nexport default MovieDetails;"],"names":["Castlist","styled","CastItem","CintainetCastImg","Cast","useState","cast","setCast","id","useParams","useEffect","getCast","then","map","cast_id","name","profile_path","src","BASE_IMG_URL","defaultImg","alt","agent","axios","baseURL","params","api_key","getMoviesByQuery","query","get","movies","data","results","console","log","message","getTrendingMovies","getMoviesDetaisById","actors","getReviews","TitlePage","MovieDetailsWrapper","ImgContainer","CastReviewsContainer","NavStyled","Nav","ButtonBackTo","location","useLocation","navigate","useNavigate","movie","setMovie","onClick","state","from","type","poster_path","title","original_title","Number","parseInt","release_date","Math","round","vote_average","overview","genres","genre","join","to","Suspense","fallback"],"sourceRoot":""}