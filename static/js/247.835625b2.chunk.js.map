{"version":3,"file":"static/js/247.835625b2.chunk.js","mappings":"iPAKe,SAASA,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAIR,OAHAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAQH,GAAII,KAAKL,EACpB,GAAE,CAACC,KAEA,4BACI,kCACA,wBACKF,EAAKO,KAAI,gBAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,KAAKC,EAAf,EAAeA,aAAf,OACN,2BACI,uBAAID,KACJ,gBAAKE,IAAKC,EAAAA,aAAeF,EAAcG,IAAKJ,MAFvCD,EADH,QASzB,C,sLCrBKM,E,OAAQC,EAAAA,OAAa,CACzBC,QAAS,gCACTC,OAAQ,CAAEC,QAHI,sCAMT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEkBN,EAAMO,IAAI,eAAgB,CAC7CJ,OAAQ,CACNG,MAAAA,KAJD,cAEGE,EAFH,yBAOIA,EAAOC,KAAKC,SAPhB,gCASHC,QAAQC,IAAI,KAAMC,SATf,gFAYA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBd,EAAMO,IAAI,sBAF5B,cAEGC,EAFH,yBAGIA,EAAOC,KAAKC,SAHhB,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gFASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAmC3B,GAAnC,gGAEkBY,EAAMO,IAAN,gBAAmBnB,IAFrC,cAEGoB,EAFH,yBAGIA,EAAOC,MAHX,gCAKHE,QAAQC,IAAI,KAAMC,SALf,gFAQA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,gGAEkBY,EAAMO,IAAN,gBAAmBnB,EAAnB,aAFlB,cAEG4B,EAFH,yBAGIA,EAAOP,KAAKvB,MAHhB,gCAKHyB,QAAQC,IAAI,KAAMC,SALf,gFAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0B7B,GAA1B,gGAEkBY,EAAMO,IAAN,gBAAmBnB,EAAnB,aAFlB,cAEG4B,EAFH,yBAGIA,EAAOP,KAAKC,SAHhB,gCAKHC,QAAQC,IAAI,KAAMC,SALf,gF,iIC1CMf,EAAe,kCAkC5B,UAjCC,WAAyB,IAAD,QACfoB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BpC,EAAAA,EAAAA,UAAS,MAAnC,eAAOqC,EAAP,KAAcC,EAAd,KACQnC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OARAE,EAAAA,EAAAA,YAAU,YACNyB,EAAAA,EAAAA,IAAoB3B,GAAII,KAAK+B,EAChC,GAAE,CAACnC,IAMCkC,GAID,4BACI,mBAAQE,QATK,WAAO,IAAD,IACvBJ,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACrC,EAOsCC,KAAK,SAApC,sBACA,0CAEA,wBAAKL,EAAMM,SACX,gBAAK/B,IAAKC,EAAewB,EAAMO,YAAa9B,IAAKuB,EAAMM,SACvD,SAAC,KAAD,CAASE,GAAG,OAAOL,MAAO,CAACC,KAAI,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAA1D,mBACA,SAAC,KAAD,CAASI,GAAG,UAAUL,MAAO,CAACC,KAAI,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KAA7D,sBACA,SAAC,EAAAK,SAAD,CAAUC,UAAU,uCAApB,UACI,SAAC,KAAD,UAZA,sCAkBf,C","sources":["components/Cast/Cast.jsx","services/servicesApi.js","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { getCast } from \"services/servicesApi\";\nimport { BASE_IMG_URL } from \"views/MovieDetails/MovieDetails\";\n\nexport default function Cast() {\n    const [cast, setCast] = useState([]);\n    const { id } = useParams();\n    useEffect(() => {\n        getCast(id).then(setCast)\n    }, [id]);\n    return (\n        <div>\n            <h2>Cast</h2>\n            <ul>\n                {cast.map(({cast_id,name,profile_path,}) => \n                    <li key={cast_id}>\n                        <p>{name}</p>\n                        <img src={BASE_IMG_URL + profile_path} alt={name} />\n                    </li>\n                )}\n            </ul>\n        </div>\n        )\n}","import axios from 'axios';\n\nconst KEY_API = 'e32bfdef8b19fee5cb99e2b4c56ab1dd';\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: KEY_API },\n});\n\nexport async function getMoviesByQuery(query) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n      },\n    });\n    return movies.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day');\n    return movies.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function getMoviesDetaisById(id) {\n  try {\n    const movies = await agent.get(`movie/${id}`);\n    return movies.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getCast(id) {\n  try {\n    const actors = await agent.get(`movie/${id}/credits`);\n    return actors.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getReviews(id) {\n  try {\n    const actors = await agent.get(`movie/${id}/reviews`);\n    return actors.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { useParams, useLocation,useNavigate, NavLink, Outlet } from \"react-router-dom\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { getMoviesDetaisById } from \"services/servicesApi\";\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n function MovieDetails() {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [movie, setMovie] = useState(null);\n    const { id } = useParams();\n    useEffect(() => {\n        getMoviesDetaisById(id).then(setMovie);\n    }, [id])\n    \n    const handleGoBack = () => {\n        navigate(location?.state?.from ?? '/')\n    }\n\n    if (!movie) {\n        return (<p>Loading ...</p>)\n    }\n    return (\n        <div>\n            <button onClick={handleGoBack} type='button'>Go back</button>\n            <h1>MovieDetails</h1>\n\n            <h2>{movie.title}</h2>\n            <img src={BASE_IMG_URL + movie.poster_path} alt={movie.title} />\n            <NavLink to='cast' state={{from: location?.state?.from ?? '/'}}>Cast</NavLink>\n            <NavLink to='reviews' state={{from: location?.state?.from ?? '/'}}>Reviews</NavLink>\n            <Suspense fallback={<p>Loading ...</p>}>\n                <Outlet/>\n            </Suspense>\n            \n        </div>\n        \n    )\n};\nexport default MovieDetails;"],"names":["Cast","useState","cast","setCast","id","useParams","useEffect","getCast","then","map","cast_id","name","profile_path","src","BASE_IMG_URL","alt","agent","axios","baseURL","params","api_key","getMoviesByQuery","query","get","movies","data","results","console","log","message","getTrendingMovies","getMoviesDetaisById","actors","getReviews","location","useLocation","navigate","useNavigate","movie","setMovie","onClick","state","from","type","title","poster_path","to","Suspense","fallback"],"sourceRoot":""}